@import url("https://fonts.bunny.net/css2?family=Montserrat:wght@500;600&display=swap");

*,
*::before,
*::after {
    box-sizing: border-box;
}

:root,
[data-theme="light"] {
    --color-text-1: #354b5e;
    --color-text-2: #777;
    --color-text-3: #ddd;
    --color-background-1: oklch(calc(var(--color-accent-1-l) + 0.41) calc(var(--color-accent-1-c) - 0.13) var(--color-accent-1-h));
    --color-background-2: #fff;
    --color-background-modal: var(--color-background-2);
    --color-accent-1-l: 0.52;
    --color-accent-1-c: 0.17;
    --color-accent-1-h: 270;
    --color-accent-1: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));
    --color-accent-2: oklch(calc(var(--color-accent-1-l) + 0.17) calc(var(--color-accent-1-c) + 0.08) calc(var(--color-accent-1-h) + 32));
    --color-link-1: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));
    --color-link-1-hover: oklch(calc(var(--color-accent-1-l) - 0.15) var(--color-accent-1-c) var(--color-accent-1-h));
    --color-link-2: oklch(0.91 calc(var(--color-accent-1-c) - 0.13) calc(var(--color-accent-1-h) - 180));
    --color-link-2-hover: oklch(0.83 calc(var(--color-accent-1-c) - 0.1) calc(var(--color-accent-1-h) - 180));
    --color-button-text: #fff;
    --font-1-family: Montserrat, sans-serif;
    --font-1-weight-normal: 500;
    --font-1-weight-bold: 600;
    --font-2-family: "Noto Sans", sans-serif;
    --font-2-weight-normal: 400;
    --font-2-weight-bold: 700;
    --line-height-small: 1.1;
    --line-height-medium: 1.25;
    --line-height-large: 1.5;
    --shadow-1: 0 0.5rem 1rem oklch(calc(var(--color-accent-1-l) + 0) calc(var(--color-accent-1-c) - 0.05) var(--color-accent-1-h) / 0.25);
    --shadow-2: 0 0 1rem var(--color-background-1);
    --shadow-modal: var(--shadow-1);
    --gradient-1: linear-gradient(315deg, var(--color-background-1) 0%, var(--color-background-2) 100%);
    --border-width: 0.1rem;
    --outline-offset: calc(0.5 * var(--border-width));
    --stroke-width-icon: 0.125rem;
    --border-radius-small: 0.25rem;
    --border-radius-medium: 0.5rem;
    --border-radius-large: 1rem;
    --size-liquid-small: clamp(0.5rem, 3vw, 1rem);
    --size-liquid-medium: clamp(0.5rem, 5vw, 1rem);
    --size-liquid-large: clamp(0.5rem, 8vw, 4rem);
    --transition-speed-fast: 300ms;
    --transition-speed-medium: 500ms;
    --transition-speed-slow: 1500ms;
    --transition-timing-function-default: ease-in-out;
    --image-filter: none;
    --noise: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23n)' /%3E%3C/svg%3E%0A");
    color: var(--color-text-1);
    color-scheme: only light;
}

::backdrop,
[data-theme="light"] ::backdrop {
    background-color: #dddb;
    backdrop-filter: blur(3px);
}

[data-theme="dark"] {
    --color-text-1: #bbb;
    --color-text-2: #888;
    --color-text-3: #333;
    --color-accent-1-l: 0.66;
    --color-background-1: oklch(calc(var(--color-accent-1-l) - 0.34) calc(var(--color-accent-1-c) - 0.13) var(--color-accent-1-h));
    --color-background-2: oklch(calc(var(--color-accent-1-l) - 0.46) calc(var(--color-accent-1-c) - 0.13) var(--color-accent-1-h));
    --color-link-1: oklch(calc(var(--color-accent-1-l) - 0.15) var(--color-accent-1-c) var(--color-accent-1-h));
    --color-link-1-hover: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));
    --image-filter: brightness(0.8);
    color: var(--color-text-1);
    color-scheme: only dark;
}

[data-theme="dark"] ::backdrop {
    background-color: #111a;
}

[hidden] {
    display: none !important;
}

:focus {
    outline-offset: var(--outline-offset);
    z-index: 1;
}

.sr-only:not(:focus):not(:active):not(:focus-within) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

img,
svg {
    max-inline-size: 100%;
    block-size: auto;
    filter: var(--image-filter);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
    font-family: var(--font-1-family);
    font-weight: var(--font-1-weight-bold);
    margin: 0;
}

a {
    color: inherit;
    text-decoration: none;
    font-weight: var(--font-1-weight-bold);
    transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
}

a:focus,
a:hover {
    color: var(--color-link-1-hover);
    text-decoration: underline;
}

p {
    margin: 0;
}

input,
textarea {
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
    background-color: transparent;
    margin: 0;
}

input:not([type="checkbox"]):not([type="radio"]):not([type="file"]),
textarea {
    border: var(--border-width) solid currentColor;
    block-size: 3rem;
    border-radius: var(--border-radius-small);
    padding-inline: 1rem;
    display: flex;
    max-inline-size: 100%;
    inline-size: 100%;
}

textarea {
    block-size: 6rem;
}

input[type="checkbox"] {
    appearance: none;
    cursor: pointer;
    block-size: 1.8rem;
    inline-size: 1.8rem;
    display: flex;
    flex-shrink: 0;
    border: var(--border-width) solid currentColor;
    border-radius: var(--border-radius-small);
    align-items: center;
    justify-content: center;
}

input[type="checkbox"]:checked::before {
    content: "\2713";
    color: var(--color-accent-1);
    font-weight: var(--font-1-weight-bold);
    font-size: 1.4rem;
}

input[type="checkbox"].toggle {
    inline-size: 3.25rem;
    border-radius: 0.9rem;
    padding: 0.2rem;
    margin: 0;
    justify-content: start;
}

input[type="checkbox"].toggle::before {
    content: "";
    block-size: calc(1.6rem - 2 * var(--border-width));
    inline-size: calc(1.6rem - 2 * var(--border-width));
    background-color: currentColor;
    border-radius: 50%;
    transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
    flex-shrink: 0;
}

input[type="checkbox"].toggle:checked::before {
    background-color: var(--color-accent-1);
    margin-left: 1.25rem;
}

input[type="radio"] {
    appearance: none;
    cursor: pointer;
    block-size: 1.8rem;
    inline-size: 1.8rem;
    display: flex;
    flex-shrink: 0;
    border: var(--border-width) solid currentColor;
    border-radius: 50%;
    align-items: center;
    justify-content: center;
}

input[type="radio"]:checked::before {
    content: "";
    block-size: calc(1.6rem - 2 * var(--border-width));
    inline-size: calc(1.6rem - 2 * var(--border-width));
    background-color: var(--color-accent-1);
    border-radius: 50%;
    transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
    flex-shrink: 0;
}

button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
    appearance: none;
    background: none;
    background-color: var(--color-link-1);
    border-radius: var(--border-radius-small);
    border: none;
    font-family: inherit;
    color: inherit;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: inherit;
    transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
    color: var(--color-button-text);
    min-block-size: 3rem;
    padding-block: 0.25rem;
    padding-inline: 1rem;
}

button:focus,
button:hover,
input[type="button"]:focus,
input[type="button"]:hover,
input[type="reset"]:focus,
input[type="reset"]:hover,
input[type="submit"]:focus,
input[type="submit"]:hover {
    background-color: var(--color-link-1-hover);
}

button.outline,
input[type="button"].outline,
input[type="reset"].outline,
input[type="submit"].outline {
    background-color: transparent;
    color: var(--color-link-1);
    border: var(--border-width) solid currentColor;
    border-radius: 100vmax;
    font-weight: var(--font-1-weight-bold);
    min-block-size: 2.5rem;
}

button.outline:focus,
button.outline:hover,
input[type="button"].outline:focus,
input[type="button"].outline:hover,
input[type="reset"].outline:focus,
input[type="reset"].outline:hover,
input[type="submit"].outline:focus,
input[type="submit"].outline:hover {
    color: var(--color-link-1-hover);
    background-color: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h) / 0.2);
}

button.secondary,
input[type="button"].secondary,
input[type="reset"].secondary,
input[type="submit"].secondary {
    background-color: var(--color-link-2);
    color: var(--color-text-2);
}

button.secondary:focus,
button.secondary:hover,
input[type="button"].secondary:focus,
input[type="button"].secondary:hover,
input[type="reset"].secondary:focus,
input[type="reset"].secondary:hover,
input[type="submit"].secondary:focus,
input[type="submit"].secondary:hover {
    background-color: var(--color-link-2-hover);
}

button.link {
    font-weight: var(--font-1-weight-normal);
    padding: 0;
    display: inline;
    inline-size: auto;
    min-block-size: 0;
    color: var(--color-link-1);
    border-radius: 0;
    border: none;
    background-color: transparent;
    text-align: inherit;
}

button.link:focus,
button.link:hover {
    text-decoration: underline;
}

button[disabled],
input[type="button"][disabled],
input[type="reset"][disabled],
input[type="submit"][disabled] {
    background-color: transparent;
    color: currentColor;
    cursor: not-allowed;
}

select {
    appearance: none;
    border: var(--border-width) solid currentColor;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
    border-radius: var(--border-radius-small);
    background-color: transparent;
    block-size: 3rem;
    padding-inline: 1rem 3rem;
    background-image: conic-gradient(from -40deg, currentColor 80deg, transparent 80deg);
    background-size: 1rem 1rem;
    background-repeat: no-repeat;
    background-position: calc(100% - 1rem) calc(50% + 0.25rem);
    margin-block: var(--margin-liquid-medium);
    cursor: pointer;
    display: flex;
    max-inline-size: 100%;
    inline-size: 100%;
}

select:focus {
    background-image: conic-gradient(from 140deg, currentColor 80deg, transparent 80deg);
    background-position: calc(100% - 1rem) calc(50% - 0.25rem);
}

label {
    cursor: pointer;
}

dialog[open] {
    border: none;
    align-items: flex-start;
    border-radius: var(--border-radius-medium);
    box-shadow: var(--shadow-1);
    max-inline-size: 100%;
    max-block-size: 100%;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    color: inherit;
    background-color: var(--color-background-modal);
    overflow: auto;
    padding: 0;
    box-shadow: var(--shadow-modal);
    animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-up;
}

dialog[open].hiding {
    animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-down;
}

nav ul {
    padding: 0;
    margin: 0;
    list-style: none;
    display: flex;
}

svg.icon {
    stroke-width: var(--stroke-width-icon);
}

body {
    background-color: var(--color-background-1);
    font-family: var(--font-1-family);
    font-weight: var(--font-1-weight-normal);
    margin: 0;
    display: flex;
    min-block-size: 100vh;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    line-height: var(--line-height-medium);
    accent-color: var(--color-accent-1);
    padding-block-end: 4rem;
    gap: 1rem;
}

aside,
main {
    padding: var(--size-liquid-medium);
    background-color: var(--color-background-2);
    box-shadow: var(--shadow-1);
    display: flex;
    flex-direction: column;
    inline-size: 25rem;
    border-radius: var(--border-radius-medium);
    max-inline-size: 100%;
    animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-up;
    transition: all var(--transition-speed-medium) var(--transition-timing-function-default);
    position: relative;
    gap: 1rem;
}

aside {
    background-color: var(--color-accent-1);
    padding-inline: 5rem 3rem;
    color: var(--color-background-2);
    font-size: 0.9rem;
}

aside.hiding {
    animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-down;
}

aside>svg {
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0.75rem;
    inline-size: 3.25rem;
}

aside a:focus,
aside a:hover {
    color: var(--color-background-1);
}

main header {
    display: grid;
}

header div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
}

header button {
    font-size: 0.85rem;
    padding-inline: 0.5rem 0.75rem;
    gap: 0.15rem;
}

header h1 {
    font-size: 1.25rem;
}

main form {
    position: relative;
    padding-block-start: 1.5rem;
}

main form svg {
    position: absolute;
    inset-block-end: 0.75rem;
    inset-inline-start: 1rem;
}

#search {
    padding-inline-start: 4rem;
    border-radius: var(--border-radius-large);
    border-color: var(--color-text-3);
}

main form input+label {
    position: absolute;
    transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
    transform-origin: 0 50%;
    transform: translate(-4rem, -2.25rem) scale(0.85);
    inset-inline-start: 4rem;
    inset-block-end: 0.85rem;
    color: var(--color-text-1);
    text-shadow: var(--shadow-2);
}

main input:placeholder-shown:not(:focus)+label {
    color: var(--color-text-2);
    transform: translate(0, 0) scale(1);
    cursor: text;
    text-shadow: none;
}

label {
    display: flex;
    align-items: center;
}

#files {
    display: grid;
    margin: 0;
    padding: 0;
    list-style: none;
    gap: 1rem;
    font-weight: var(--font-1-weight-bold);
}

#files:empty::before {
    content: "No files found.";
    display: flex;
    block-size: 3rem;
    justify-self: center;
    align-items: center;
    text-align: center;
}

#files a {
    display: flex;
    gap: 1rem;
    align-items: center;
}

#files svg {
    transition: transform var(--transition-speed-medium) var(--transition-timing-function-default);
}

#files a:focus svg,
#files a:hover svg {
    transform: scale(1.5);
}

#files div {
    border-radius: 100vmax;
    border: var(--border-width) solid;
    inline-size: 3rem;
    padding: 0.5rem;
    aspect-ratio: 1/1;
    display: flex;
    flex-shrink: 0;
}

#settings-modal {
    background-color: var(--color-background-modal);
    border: none;
    inline-size: 23rem;
}

#settings-modal form {
    padding: var(--size-liquid-medium);
    position: relative;
    display: flex;
    flex-direction: column;
}

#settings-modal p {
    margin: 0;
    text-transform: capitalize;
}

#settings-modal label {
    display: block;
    margin-block: 1rem 0.25rem;
    text-transform: capitalize;
}

.settings-open-button {
    inline-size: auto;
    block-size: auto;
    color: inherit;
    position: fixed;
    inset-block-end: 0.5rem;
    inset-inline-start: 0.5rem;
    block-size: 3rem;
    min-inline-size: 3rem;
    padding-inline: 0.75rem;
    background-color: var(--color-background-1);
    border: 0 solid currentColor;
}

.settings-open-button:focus,
.settings-open-button:hover {
    border-width: var(--border-width);
    background-color: var(--color-background-1);
}

.settings-open-button span {
    padding-inline-start: 0.25rem;
    text-transform: capitalize;
}

.settings-open-button svg,
.close-button svg {
    inline-size: 1.5rem;
    block-size: auto;
}

.settings-open-button:not(:hover):not(:focus):not(:active):not(:focus-within) span,
.close-button span {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.close-button {
    color: inherit;
    position: absolute;
    inset-block-start: 0.25rem;
    inset-inline-end: 0.25rem;
    inline-size: 3rem;
    block-size: 3rem;
    border-radius: 100vmax;
    background-color: transparent;
    padding: 0;
}

.close-button:focus,
.close-button:hover {
    color: var(--color-background-modal);
}

#settings-hue-wrapper {
    display: flex;
}

#settings-hue {
    -webkit-appearance: none;
    background-image: linear-gradient(to right, oklch(var(--color-accent-1-l) var(--color-accent-1-c) 0), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 90), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 180), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 270), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 360));
    block-size: 1.8rem;
    color: inherit;
    border-radius: var(--border-radius-small);
    max-inline-size: 100%;
    inline-size: 17.5rem;
    margin-inline: 0;
    cursor: crosshair;
    display: flex;
    border: none;
    padding: 0;
}

#settings-hue::-moz-range-thumb {
    border: 0.15rem solid currentColor;
    height: 1.8rem;
    width: var(--border-radius-small);
    border-radius: 1rem;
    background: transparent;
    cursor: pointer;
    box-sizing: content-box;
}

#settings-hue::-webkit-slider-thumb {
    border: var(--border-width) solid currentColor;
    height: 1.8rem;
    width: var(--border-width);
    border-radius: 1rem;
    background: transparent;
    cursor: pointer;
    -webkit-appearance: none;
    box-sizing: content-box;
}

#settings-hue::-ms-thumb {
    border: var(--border-width) solid currentColor;
    height: 1.8rem;
    width: var(--border-width);
    border-radius: 1rem;
    background: transparent;
    cursor: pointer;
    box-sizing: content-box;
}

#settings-hue-preview {
    display: flex;
    inline-size: 2rem;
    block-size: 2rem;
    background-color: var(--color-accent-1);
    border-radius: var(--border-radius-largest);
    margin-inline-end: 0.25rem;
}

@keyframes scale-up {
    from {
        opacity: 0;
        transform: scale(0);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes scale-down {
    from {
        opacity: 1;
        transform: scale(1);
    }

    to {
        opacity: 0;
        transform: scale(0);
    }
}